/**
 * mouse-follower.js
 * 
 * Copyright (c) 2022 YourIllust
 * Code released under the MIT license
 * http://yourillust.local/mit-license/
 * 
 * YourIllust.com
 * https://yourillust.com/
 */
function mouse_follower(canvas_size,camera,lights){var renderer=new THREE.WebGLRenderer({canvas:document.querySelector("#canvas"),alpha:!0,antialias:!0});if(window.innerWidth-45<=canvas_size[0])var canvas_w=window.innerWidth-45,canvas_h=window.innerWidth-45;else var canvas_w=canvas_size[0],canvas_h=canvas_size[1];renderer.setPixelRatio(1),renderer.setSize(canvas_w,canvas_h);var scene=new THREE.Scene,camera_distance=500;camera.position.set(0,0,500);var loader=new THREE.GLTFLoader,model=null;function decimal_point_num(value,num){return Math.floor(value*Math.pow(10,num))/Math.pow(10,num)}function tick(){renderer.render(scene,camera),requestAnimationFrame(tick)}loader.load(gltf_glb_path,(function(gltf){model=gltf.scene;var box=(new THREE.Box3).setFromObject(model),dimensions_x=Math.round(box.max.x+-1*box.min.x),dimensions_y=Math.round(box.max.y+-1*box.min.y),dimensions_z=Math.round(box.max.z+-1*box.min.z),camera_distance_ratio=.442,decimal_point=4,resizeTimer;if(dimensions_x>=dimensions_y&&dimensions_x>=dimensions_z)var bigest_dimention_expansion_ratio=decimal_point_num(221/dimensions_x,4);else if(dimensions_y>=dimensions_x&&dimensions_y>=dimensions_z)var bigest_dimention_expansion_ratio=decimal_point_num(221/dimensions_y,4);else if(dimensions_z>=dimensions_x&&dimensions_z>=dimensions_y)var bigest_dimention_expansion_ratio=decimal_point_num(221/dimensions_z,4);function get_position(){var clientRect=document.getElementById("canvas").getBoundingClientRect(),canvas_x=clientRect.left+window.pageXOffset,canvas_y=clientRect.top+window.pageYOffset,half_canvas_w,half_canvas_h,canvas_center_x,canvas_center_y,browser_w,browser_h,result;return[canvas_x+canvas_w/2,canvas_y+canvas_h/2,window.innerWidth,window.innerHeight]}function onResize(){window.innerWidth-45<=canvas_size[0]?(canvas_w=window.innerWidth-45,canvas_h=window.innerWidth-45):(canvas_w=canvas_size[0],canvas_h=canvas_size[1]),renderer.setPixelRatio(1),renderer.setSize(canvas_w,canvas_h),tick()}model.scale.set(bigest_dimention_expansion_ratio,bigest_dimention_expansion_ratio,bigest_dimention_expansion_ratio),model.position.set(0,0,0),window.addEventListener("resize",get_position()),window.addEventListener("resize",(function(event){resizeTimer||clearTimeout(resizeTimer),resizeTimer=setTimeout((function(){onResize()}),1e3)})),window.addEventListener("mousemove",(function(e){var g_p=get_position(),canvas_center_x=g_p[0],canvas_center_y=g_p[1],browser_w=g_p[2],browser_h=g_p[3],mouse_x,mouse_y,object_moving_x=canvas_center_x-e.pageX,object_moving_y=canvas_center_y-e.pageY;object_moving_x>0?browser_w/2<object_moving_x&&(object_moving_x=browser_w/2):object_moving_x<0&&browser_w/2<-1*object_moving_x&&(object_moving_x=browser_w/2*-1),object_moving_y>0?browser_h/2<object_moving_y&&(object_moving_y=browser_h/2):object_moving_y<0&&browser_h/2<-1*object_moving_y&&(object_moving_y=browser_h/2*-1),model.rotation.set(Math.PI/-100*20/(browser_h/2)*object_moving_y,Math.PI/-100*35/(browser_w/2)*object_moving_x,0),scene.add(gltf.scene)})),model.rotation.set(0,0,0),scene.add(gltf.scene)})),renderer.gammaOutput=!0,renderer.gammaFactor=2.2,lights.forEach((function(light){scene.add(light)})),renderer.outputEncoding=THREE.sRGBEncoding,renderer.toneMapping=THREE.ACESFilmicToneMapping,renderer.shadowMap.enabled=!0,renderer.physicallyCorrectLights=!0,tick()}